//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.3-hudson-jaxb-ri-2.2-70- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.02.26 at 10:31:45 PM IST 
//


package objectmodel;

import Utils.WaitNotifyManager;
import java.beans.EventHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import main.StateManager;
import main.UserPrompt;


/**
 * <p>Java class for City complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="City">
 *   &lt;complexContent>
 *     &lt;extension base="{}CellBase">
 *       &lt;sequence>
 *         &lt;element name="SingleHousePrice" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="HouseToll">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element name="One" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *                   &lt;element name="Two" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *                   &lt;element name="Three" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *                 &lt;/all>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="Country" type="{}Country"/>
 *         &lt;element name="Owner" type="{}Player" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="HousesNumber" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "City", propOrder = {
    "singleHousePrice",
    "houseToll",
    "country",
    "owner"
})
public class City
    extends CellBase
{
    @XmlElement(name = "SingleHousePrice")
    protected int singleHousePrice;
    @XmlElement(name = "HouseToll", required = true)
    protected City.HouseToll houseToll;
    @XmlElement(name = "Country", required = true)
    protected Country country;
    @XmlElement(name = "Owner")
    protected Player owner;
    @XmlAttribute(name = "HousesNumber", required = true)
    protected int housesNumber;

    /**
     * Gets the value of the singleHousePrice property.
     * 
     */
    public int getSingleHousePrice() {
        return singleHousePrice;
    }

    /**
     * Sets the value of the singleHousePrice property.
     * 
     */
    public void setSingleHousePrice(int value) {
        this.singleHousePrice = value;
    }

    /**
     * Gets the value of the houseToll property.
     * 
     * @return
     *     possible object is
     *     {@link City.HouseToll }
     *     
     */
    public City.HouseToll getHouseToll() {
        return houseToll;
    }

    /**
     * Sets the value of the houseToll property.
     * 
     * @param value
     *     allowed object is
     *     {@link City.HouseToll }
     *     
     */
    public void setHouseToll(City.HouseToll value) {
        this.houseToll = value;
    }

    /**
     * Gets the value of the country property.
     * 
     * @return
     *     possible object is
     *     {@link Country }
     *     
     */
    public Country getCountry() {
        return country;
    }

    /**
     * Sets the value of the country property.
     * 
     * @param value
     *     allowed object is
     *     {@link Country }
     *     
     */
    public void setCountry(Country value) {
        this.country = value;
    }

    /**
     * Gets the value of the owner property.
     * 
     * @return
     *     possible object is
     *     {@link Player }
     *     
     */
    public Player getOwner() {
        return owner;
    }

    /**
     * Sets the value of the owner property.
     * 
     * @param value
     *     allowed object is
     *     {@link Player }
     *     
     */
    @Override
    public void setOwner(Player value) {
        this.owner = value;
    }

    /**
     * Gets the value of the housesNumber property.
     * 
     */
    public int getHousesNumber() {
        return housesNumber;
    }

    /**
     * Sets the value of the housesNumber property.
     * 
     */
    public void setHousesNumber(int value) {
        this.housesNumber = value;
    }

    @Override
    public void performPlayerLand(Player landedPlayer)
    {
    	// does the city have an owner?
    	if(owned)
    	{
    		// who owns the city?
    		if (this.owner == landedPlayer)
    		{
    			// we own it!
    			// do we own the country and can still build houses??
    			if (RealEstate.getRealEstate().doesOwnCountry(landedPlayer, country.getName()) && housesNumber < 3)
    			{
    				// we can build houses, do we want to & have the $$$?
    				if (singleHousePrice < landedPlayer.getMoney())
    				{
    					WaitNotifyManager waiter = new WaitNotifyManager();

                                        StateManager.getStateManager().setCurrentStateToPlayerOfferBuilding(this,
    						landedPlayer.getName() + " has just bought " + name,
    						landedPlayer, this, waiter);
         
                                        waiter.doWait();

                                        boolean wantsToBuild = (Boolean)UserPrompt.GetObject();
                                    
                                        if (wantsToBuild)
                                        {

                                            landedPlayer.getPlayerActions().payMoneyToBank(singleHousePrice);
                                            StateManager.getStateManager().setCurrentStateToPlayerBuilding(this,
                                                            landedPlayer.getName() + " is building a house in " + name,
                                                            landedPlayer, this);
                                            StateManager.getStateManager().setCurrentStateToPlayerPayingToBank(this,
                                                            landedPlayer.getName() + " is paying to the bank for a house",
                                                            landedPlayer, singleHousePrice);
                                            housesNumber ++;
                                        }
    				}
    			}
    			// we don't own the country or the city already has 3 houses
    			else
    			{
    				StateManager.getStateManager().setCurrentStateToPlayerLanded(this, 
    						landedPlayer.getName() + " already owns the city. Houses number: " + housesNumber,
    						landedPlayer, this);
    			}
    		}
    		// crap! someone else owns the city!
    		else
    		{
    			int payToll;
    			switch (housesNumber)
    			{
    			case 1:
    				payToll = houseToll.getOne();
    				break;
    			case 2:
    				payToll = houseToll.getTwo();
    				break;
    			case 3:
    				payToll = houseToll.getThree();
    				break;
    			default:
    				payToll = landToll;
    				break;
    			}
    			
    			landedPlayer.getPlayerActions().payToPlayer(owner, payToll);
    			StateManager.getStateManager().setCurrentStateToPlayerPayingToAnotherPlayer(this,
    					landedPlayer.getName() + " has to pay " + payToll + " to " + owner.getName(),
    					landedPlayer, payToll, owner);
    		}
    	}
    	// no one owns the city
    	else
    	{
    		// does the player have enough money to buy the city?
    		if (landedPlayer.getMoney() > price)
    		{
    			WaitNotifyManager waiter = new WaitNotifyManager();

                        StateManager.getStateManager().setCurrentStateToPlayerOfferBuying(this,
    						landedPlayer.getName() + " has just bought " + name,
    						landedPlayer, this, waiter);

                        waiter.doWait();

                        boolean wantsToBuy = (Boolean)UserPrompt.GetObject();

                        // does the player want to buy the city?
    			if (wantsToBuy)
    			{
    				// yep! buy the city...
    				landedPlayer.getPlayerActions().payMoneyToBank(price);
    				landedPlayer.getOwnedCells().getCell().add(this);
    				this.owner = landedPlayer;
    				owned = true;
    				StateManager.getStateManager().setCurrentStateToPlayerBuying(this, 
    						landedPlayer.getName() + " has just bought " + name,
    						landedPlayer, this);
                                StateManager.getStateManager().setCurrentStateToPlayerPayingToBank(this,
    						landedPlayer.getName() + " has just bought " + name + " for " + price,
    						landedPlayer, price);
    			}
    		}
    		// not enough $$$
    		else
    		{
    			StateManager.getStateManager().setCurrentStateToPlayerLanded(this, 
    					landedPlayer.getName() + " doesn't have enough money for " + name,
    					landedPlayer, this);
    		}
    	}
    }
    
    @Override
    public void returnToBank()
    {
    	owned = false;
    	owner = null;
    	housesNumber = 0;
    }

    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element name="One" type="{http://www.w3.org/2001/XMLSchema}int"/>
     *         &lt;element name="Two" type="{http://www.w3.org/2001/XMLSchema}int"/>
     *         &lt;element name="Three" type="{http://www.w3.org/2001/XMLSchema}int"/>
     *       &lt;/all>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class HouseToll {

        @XmlElement(name = "One")
        protected int one;
        @XmlElement(name = "Two")
        protected int two;
        @XmlElement(name = "Three")
        protected int three;

        /**
         * Gets the value of the one property.
         * 
         */
        public int getOne() {
            return one;
        }

        /**
         * Sets the value of the one property.
         * 
         */
        public void setOne(int value) {
            this.one = value;
        }

        /**
         * Gets the value of the two property.
         * 
         */
        public int getTwo() {
            return two;
        }

        /**
         * Sets the value of the two property.
         * 
         */
        public void setTwo(int value) {
            this.two = value;
        }

        /**
         * Gets the value of the three property.
         * 
         */
        public int getThree() {
            return three;
        }

        /**
         * Sets the value of the three property.
         * 
         */
        public void setThree(int value) {
            this.three = value;
        }
    }

}
